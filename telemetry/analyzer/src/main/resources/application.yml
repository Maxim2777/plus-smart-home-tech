spring:
  application:
    name: analyzer

  datasource:
    url: jdbc:postgresql://localhost:5432/telemetry_analyzer
    username: postgres
    password: shareit
    driver-class-name: org.postgresql.Driver

  sql:
    init:
      mode: always               # ← выполняем schema.sql при запуске

  jpa:
    hibernate:
      ddl-auto: validate         # можно поставить update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

analyzer:
  kafka:
    consumers:
      snapshots:
        properties:
          bootstrap.servers: localhost:9092
          group.id: telemetry-analyzer-snapshots
          client.id: telemetry.analyzer.snapshots
          auto.offset.reset: earliest
          key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value.deserializer: ru.yandex.practicum.kafka.deserializer.SensorsSnapshotAvroDeserializer
        topics:
          snapshots-events: telemetry.snapshots.v1

grpc:
  client:
    hub-router:
      address: 'static://localhost:59090'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext