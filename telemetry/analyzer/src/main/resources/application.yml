spring:
  application:
    name: analyzer

  datasource:
    url: jdbc:postgresql://localhost:5432/telemetry_analyzer
    username: postgres
    password: shareit
    driver-class-name: org.postgresql.Driver

  sql:
    init:
      mode: always

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

grpc:
  client:
    hub-router:
      address: "static://localhost:59090"
      negotiationType: plaintext
      enableKeepAlive: true
      keepAliveWithoutCalls: true

analyzer:
  kafka:
    snapshot-consumer:
      bootstrap-servers: localhost:9092
      group-id: analyzer-snapshot-events
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: ru.yandex.practicum.telemetry.analyzer.deserializer.SensorsSnapshotDeserializer

    hub-consumer:
      bootstrap-servers: localhost:9092
      group-id: analyzer-hub-events
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: ru.yandex.practicum.telemetry.analyzer.deserializer.HubEventDeserializer